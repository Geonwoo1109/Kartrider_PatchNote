var Key =
"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50X2lkIjoiOTkwNDM3MjIxIiwiYXV0aF9pZCI6IjQiLCJ0b2tlbl90eXBlIjoiQWNjZXNzVG9rZW4iLCJzZXJ2aWNlX2lkIjoiNDMwMDExMzkzIiwiWC1BcHAtUmF0ZS1MaW1pdCI6IjIwMDAwOjEwIiwibmJmIjoxNjA4MzkxODMyLCJleHAiOjE2NzE0NjM4MzIsImlhdCI6MTYwODM5MTgzMn0.qxByvfxvxjxf213RwwmYh046kOvDncQYOPfPxlWnngE";
var allsee = "\u200d".repeat (500);

const Jsoup = org.jsoup.Jsoup;
var Master = ["",
"[관리자]_에티선생",
"[관리자]_루돌프혜원",
"[관리자]_만렙모험가",
"[관리자]_인썸김여신",
"[관리자]_Hyewonnn",
"[관리자]_MerryZico",
"[관리자]_힘슘찐",
"[관리자]_힘슘찐",
"[관리자]_헐렁봉디",
"[서포터]_RasCal중중",
"에티선생",
"김건우",
"LEG건우 / 17남 / 편집남코딩남"];

function response(room, msg, sender, isGroupChat, replier, imageDB, packageName) {
  if (room == "(PC)카트라이더 유저들의 모임🔊" && sender == "방장봇") {
    // replier.reply ("환영합니다~ 카트라이더 닉네임이신가요?");
  }
  

     if ((room == "(PC)카트라이더 유저들의 모임🔊" && Master.includes (sender)) || room != "(PC)카트라이더 유저들의 모임🔊") {
       
       
if (msg.startsWith(".유저 ")) {
     try {
     User = msg.substr(4);
//     replier.reply (msg.substr (4));
    let data3 = Jsoup.connect ("https://api.nexon.co.kr/kart/v1.0/users/nickname/" + User)
    .header ("Authorization", Key).data ("nickname", User)
    .ignoreContentType(true).get().text();
    data3 = JSON.parse(data3);
    
     replier.reply (
     "유저 고유 Id: " + data3 ["accessId"]
     + "\n게임 닉네임: " + data3 ["name"]
     + "\n레벨: " + data3 ["level"]);
   } catch (e) {
     replier.reply("존재하지 않는 라이더 이름입니다." + "\n\n주의: 최근에 닉네임을 변경하셨거나 복귀하신 이력이 있다면 인식이 되지 않을 수 있습니다.");
   }
  }

if (msg.startsWith(".매치 ")) {
  try {
    let userId = Jsoup.connect ("https://api.nexon.co.kr/kart/v1.0/users/nickname/" + msg.substr(4))
    .header ("Authorization", Key).data ("nickname", msg.substr (4))
    .ignoreContentType(true).get().text();
//    replier.reply (data3);
/*
     replier.reply (
     "유저 고유 Id: " + data3 ["accessId"]
     + "\n게임 닉네임: " + data3 ["name"]
     + "\n레벨: " + data3 ["level"]);
*/
    replier.reply (JSON.parse (userId)["accessId"]);
    
    let matchData = Jsoup.connect (
    "https://api.nexon.co.kr/kart/v1.0/users/"
    + JSON.parse (userId)["accessId"] +
    "/matches?start_date=&end_date=&offset=&limit=1&match_types=")
    .header ("Authorization", Key).ignoreContentType(true).get().text();
    
    replier.reply (JSON.parse (matchData)["nickName"]
    
    + "\n" + JSON.parse (matchData).matches[0].matches[0].matchId
    //뭐든지 배열이면 [0]
    );
    
    let Final = Jsoup.connect(
    "https://api.nexon.co.kr/kart/v1.0/matches/"
    + JSON.parse (matchData).matches[0].matches[0].matchId)
    .header ("Authorization", Key).ignoreContentType(true).get().text();
    
    replier.reply (
    JSON.parse (Final)["matchType"]
    + "\n" + JSON.parse (Final)["startTime"]
    + "\n" + JSON.parse (Final)["players"].length
    + "\n" + JSON.parse (Final).players[0].characterName
    );
    var a = [];
    for (i=0; i<JSON.parse (Final)["players"].length; i++) {
      
      a.push (JSON.parse (Final).players[i].characterName);
      replier.reply (JSON.parse (Final).players[i].characterName);
    }
    replier.reply (a);
    a = [];
    replier.reply (a);
        
  } catch (e1) {
    replier.reply (e1);
  }
}
  
  
  
}
}
